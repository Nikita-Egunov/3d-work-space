/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf -t -T 
Files: scene.gltf [10.94KB] > C:\Users\Nikita\projects\3d-work-space\public\models\ultrawide_monitor\scene-transformed.glb [364.29KB] (-3230%)
Author: dylanheyes (https://sketchfab.com/dylanheyes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ultrawide-monitor-f84d24b6df3648d884fd9be9c8007dd4
Title: Ultrawide Monitor
*/

import * as THREE from 'three'
import { type JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { type GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ultrawide_Monitor_Screen_0: THREE.Mesh
    Ultrawide_Monitor_Body_0: THREE.Mesh
    Ultrawide_Monitor_Lights_0: THREE.Mesh
  }
  materials: {
    Screen: THREE.MeshStandardMaterial
    Body: THREE.MeshStandardMaterial
    Lights: THREE.MeshStandardMaterial
  }
  animations: THREE.AnimationClip[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/3d-work-space/models//ultrawide_monitor/scene-transformed.glb') as unknown as GLTFResult
  return (
    <group {...props} scale={1.5} dispose={null}>
      <mesh geometry={nodes.Ultrawide_Monitor_Screen_0.geometry} material={materials.Screen} rotation={[-Math.PI / 2, 0.001, -Math.PI / 2]} scale={[0.194, 5.362, 2.422]} />
      <mesh geometry={nodes.Ultrawide_Monitor_Body_0.geometry} material={materials.Body} rotation={[-Math.PI / 2, 0.001, -Math.PI / 2]} scale={[0.194, 5.362, 2.422]} />
      <mesh geometry={nodes.Ultrawide_Monitor_Lights_0.geometry} material={materials.Lights} rotation={[-Math.PI / 2, 0.001, -Math.PI / 2]} scale={[0.194, 5.362, 2.422]} />
    </group>
  )
}

useGLTF.preload('/3d-work-space/models//ultrawide_monitor/scene-transformed.glb')
